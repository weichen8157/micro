AMD HSA Code Object
  Version 1:0
HSAIL 
  Version 1:0
  Profile 1  Machine model: 1  Default float rounding: 2
ISA
  Vendor AMD  Arch AMDGPU  Version 7:0:0
Producer options
  '-hsa_call_convention=0 -O'

Segments (total 1):
  Segment (0)
    Type: 1610612739     Flags: 0x00000006
    Image Size: 4736     Memory Size: 4736     Align: 256     VAddr: 0

Data Sections (total 1):
  Section .hsatext (Index 1)
    Type: 1     Flags: 0x00c00007
    Size:  4736     Address: 0     Align: 256

Relocation Sections (total 0):

Symbols (total 1):
  Symbol &__OpenCL_vector_copy_kernel (Index 0):
    Section: .hsatext     Section Offset: 0
    VAddr: 0     Size: 4736     Alignment: 256
    Kind: KERNEL     Linkage: PROGRAM     Definition: TRUE

AMD Kernel Code for &__OpenCL_vector_copy_kernel: 
  amd_kernel_code_version_major                                = 1
  amd_kernel_code_version_minor                                = 1
  amd_machine_kind                                             = AMDGPU
  amd_machine_version_major                                    = 0
  amd_machine_version_minor                                    = 0
  amd_machine_version_stepping                                 = 0
  kernel_code_entry_byte_offset                                = 256
  max_scratch_backing_memory_byte_size                         = 0
  COMPUTE_PGM_RSRC1 (0xac004600):
    granulated_workitem_vgpr_count                             = 6
    granulated_wavefront_sgpr_count                            = 1
    priority                                                   = 0
    float_round_mode_32                                        = NEAREST_EVEN
    float_round_mode_16_64                                     = NEAREST_EVEN
    float_denorm_mode_32                                       = FLUSH_SOURCE_OUTPUT
    float_denorm_mode_16_64                                    = FLUSH_NONE
    enable_dx10_clamp                                          = TRUE
    enable_ieee_mode                                           = TRUE
  COMPUTE_PGM_RSRC2 (0x90000000):
    user_sgpr_count                                            = 8
    enable_sgpr_workgroup_id_x                                 = TRUE
    enable_vgpr_workitem_id                                    = X
    granulated_lds_size                                        = 0
  KERNEL_CODE_PROPERTIES (0xa000b000):
    enable_sgpr_private_segment_buffer                         = TRUE
    enable_sgpr_dispatch_ptr                                   = TRUE
    enable_sgpr_kernarg_segment_ptr                            = TRUE
    private_element_size                                       = DWORD (4 bytes)
    is_ptr64                                                   = TRUE
  kernarg_segment_byte_size                                    = 50
  wavefront_sgpr_count                                         = c
  workitem_vgpr_count                                          = 1c
  kernarg_segment_alignment                                    = 4
  group_segment_alignment                                      = 4
  private_segment_alignment                                    = 4
  wavefront_size                                               = 6

Disassembly for &__OpenCL_vector_copy_kernel: 
  asic(CI)
  type(CS)

  s_load_dword  s0, s[4:5], 0x01                        // 000000000000: C0000501
  s_waitcnt     lgkmcnt(0)                              // 000000000004: BF8C007F
  s_bfe_u32     s0, s0, 0x00100000                      // 000000000008: 9380FF00 00100000
  s_mul_i32     s0, s0, s8                              // 000000000010: 93000800
  v_add_i32     v0, s[2:3], s0, v0                      // 000000000014: D24A0200 00020000
  s_load_dwordx2  s[0:1], s[6:7], 0x0c                  // 00000000001C: C040070C
  s_waitcnt     lgkmcnt(0)                              // 000000000020: BF8C007F
  v_mov_b32     v1, s0                                  // 000000000024: 7E020200
  v_readfirstlane_b32  s2, v1                           // 000000000028: 7E040501
  v_mov_b32     v1, s1                                  // 00000000002C: 7E020201
  v_readfirstlane_b32  s3, v1                           // 000000000030: 7E060501
  s_load_dword  s2, s[2:3], 0x00                        // 000000000034: C0010300
  v_mov_b32     v1, 0x000003e8                          // 000000000038: 7E0202FF 000003E8
  s_waitcnt     lgkmcnt(0)                              // 000000000040: BF8C007F
  v_mul_lo_u32  v1, s2, v1                              // 000000000044: D2D20001 00020202
  v_cmp_lt_i32  s[2:3], v1, 1                           // 00000000004C: D1020002 00010301
  s_mov_b64     s[4:5], exec                            // 000000000054: BE84047E
  s_andn2_b64   exec, s[4:5], s[2:3]                    // 000000000058: 8AFE0204
  s_cbranch_execz  label_045F                           // 00000000005C: BF880447
  s_load_dwordx2  s[2:3], s[6:7], 0x0e                  // 000000000060: C041070E
  s_load_dwordx2  s[6:7], s[6:7], 0x00                  // 000000000064: C0430700
  s_waitcnt     lgkmcnt(0)                              // 000000000068: BF8C007F
  v_add_i32     v0, s[8:9], v0, s6                      // 00000000006C: D24A0800 00000D00
  v_mov_b32     v1, s7                                  // 000000000074: 7E020207
  v_addc_u32    v1, vcc, 0, v1, s[8:9]                  // 000000000078: D2506A01 00220280
  v_lshl_b64    v[0:1], v[0:1], 32                      // 000000000080: D2C20000 00014100
  v_ashr_i64    v[0:1], v[0:1], 32                      // 000000000088: D2C60000 00014100
  v_lshl_b64    v[0:1], v[0:1], 2                       // 000000000090: D2C20000 00010500
  v_add_i32     v2, s[6:7], s2, v0                      // 000000000098: D24A0602 00020002
  v_mov_b32     v3, s3                                  // 0000000000A0: 7E060203
  v_addc_u32    v3, vcc, v3, v1, s[6:7]                 // 0000000000A4: D2506A03 001A0303
  v_add_i32     v0, s[2:3], s0, v0                      // 0000000000AC: D24A0200 00020000
  v_mov_b32     v4, s1                                  // 0000000000B4: 7E080201
  v_addc_u32    v1, vcc, v4, v1, s[2:3]                 // 0000000000B8: D2506A01 000A0304
  v_mov_b32     v4, s0                                  // 0000000000C0: 7E080200
  v_mov_b32     v5, s1                                  // 0000000000C4: 7E0A0201
  flat_load_dword  v4, v[4:5]                           // 0000000000C8: DC300000 04000004
  s_movk_i32    s0, 0x03e8                              // 0000000000D0: B00003E8
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 0000000000D4: BF8C0070
  v_mul_lo_u32  v4, v4, s0                              // 0000000000D8: D2D20004 00000104
  s_mov_b64     s[0:1], exec                            // 0000000000E0: BE80047E
  v_mov_b32     v5, 0                                   // 0000000000E4: 7E0A0280
label_003A:
  v_bfe_u32     v6, v1, 24, 8                           // 0000000000E8: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 0000000000F0: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 0000000000F8: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000100: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000108: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000110: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000118: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000120: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000128: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000130: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000138: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000140: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000148: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000150: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000158: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000160: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000168: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000170: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000178: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000180: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000188: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000190: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000198: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 0000000001A0: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 0000000001A8: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 0000000001B0: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 0000000001B8: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 0000000001C0: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 0000000001C8: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 0000000001D0: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 0000000001D8: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 0000000001E0: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 0000000001E8: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 0000000001F0: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 0000000001F8: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000200: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000208: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000210: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000218: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000220: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000228: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000022C: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000230: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000238: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000023C: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000240: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000248: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000024C: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000250: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000258: 340C1288
  s_movk_i32    s2, 0x00ff                              // 00000000025C: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000260: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000268: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000026C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000270: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000278: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000027C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000280: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000288: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000290: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000298: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 0000000002A0: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 0000000002A8: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 0000000002B0: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 0000000002B8: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 0000000002C0: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 0000000002C8: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 0000000002D0: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 0000000002D8: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 0000000002E0: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 0000000002E8: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 0000000002F0: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 0000000002F8: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000300: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000308: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000310: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000318: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000320: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000328: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000330: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000338: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000000340: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000000348: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000000350: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000000358: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000000360: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000000368: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000000370: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000000378: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000380: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000388: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000390: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000398: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 0000000003A0: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 0000000003A8: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 0000000003B0: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 0000000003B8: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 0000000003C0: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 0000000003C8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000003CC: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 0000000003D0: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 0000000003D8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000003DC: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 0000000003E0: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 0000000003E8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000003EC: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 0000000003F0: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 0000000003F8: 340C1288
  s_movk_i32    s2, 0x00ff                              // 0000000003FC: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000400: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000408: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000040C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000410: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000418: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000041C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000420: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000428: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000430: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000438: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000440: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000448: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000450: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000458: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000460: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000468: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000470: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000478: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000480: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000488: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000490: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000498: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 0000000004A0: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 0000000004A8: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 0000000004B0: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 0000000004B8: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 0000000004C0: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 0000000004C8: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 0000000004D0: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 0000000004D8: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 0000000004E0: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 0000000004E8: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 0000000004F0: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 0000000004F8: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000000500: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000000508: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000000510: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000000518: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000520: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000528: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000530: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000538: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000540: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000548: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000550: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000558: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000560: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000568: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000056C: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000570: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000578: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000057C: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000580: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000588: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000058C: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000590: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000598: 340C1288
  s_movk_i32    s2, 0x00ff                              // 00000000059C: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 0000000005A0: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 0000000005A8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000005AC: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 0000000005B0: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 0000000005B8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000005BC: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 0000000005C0: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 0000000005C8: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 0000000005D0: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 0000000005D8: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 0000000005E0: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 0000000005E8: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 0000000005F0: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 0000000005F8: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000600: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000608: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000610: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000618: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000620: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000628: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000630: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000638: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000640: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000648: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000650: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000658: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000660: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000668: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000670: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000678: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000000680: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000000688: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000000690: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000000698: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 0000000006A0: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 0000000006A8: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 0000000006B0: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 0000000006B8: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 0000000006C0: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 0000000006C8: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 0000000006D0: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 0000000006D8: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 0000000006E0: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 0000000006E8: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 0000000006F0: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 0000000006F8: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000700: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000708: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000070C: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000710: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000718: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000071C: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000720: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000728: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000072C: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000730: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000738: 340C1288
  s_movk_i32    s2, 0x00ff                              // 00000000073C: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000740: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000748: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000074C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000750: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000758: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000075C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000760: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000768: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000770: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000778: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000780: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000788: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000790: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000798: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 0000000007A0: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 0000000007A8: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 0000000007B0: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 0000000007B8: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 0000000007C0: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 0000000007C8: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 0000000007D0: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 0000000007D8: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 0000000007E0: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 0000000007E8: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 0000000007F0: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 0000000007F8: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000800: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000808: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000810: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000818: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000000820: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000000828: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000000830: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000000838: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000000840: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000000848: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000000850: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000000858: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000860: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000868: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000870: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000878: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000880: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000888: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000890: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000898: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 0000000008A0: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 0000000008A8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000008AC: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 0000000008B0: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 0000000008B8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000008BC: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 0000000008C0: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 0000000008C8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000008CC: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 0000000008D0: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 0000000008D8: 340C1288
  s_movk_i32    s2, 0x00ff                              // 0000000008DC: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 0000000008E0: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 0000000008E8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000008EC: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 0000000008F0: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 0000000008F8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000008FC: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000900: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000908: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000910: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000918: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000920: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000928: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000930: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000938: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000940: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000948: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000950: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000958: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000960: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000968: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000970: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000978: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000980: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000988: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000990: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000998: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 0000000009A0: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 0000000009A8: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 0000000009B0: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 0000000009B8: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 0000000009C0: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 0000000009C8: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 0000000009D0: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 0000000009D8: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 0000000009E0: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 0000000009E8: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 0000000009F0: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 0000000009F8: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000A00: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000A08: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000A10: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000A18: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000A20: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000A28: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000A30: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000A38: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000A40: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000A48: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000A4C: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000A50: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000A58: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000A5C: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000A60: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000A68: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000A6C: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000A70: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000A78: 340C1288
  s_movk_i32    s2, 0x00ff                              // 000000000A7C: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000A80: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000A88: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000A8C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000A90: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000A98: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000A9C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000AA0: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000AA8: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000AB0: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000AB8: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000AC0: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000AC8: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000AD0: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000AD8: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000AE0: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000AE8: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000AF0: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000AF8: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000B00: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000B08: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000B10: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000B18: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000B20: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000B28: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000B30: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000B38: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000B40: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000B48: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000B50: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000B58: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000000B60: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000000B68: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000000B70: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000000B78: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000000B80: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000000B88: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000000B90: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000000B98: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000BA0: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000BA8: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000BB0: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000BB8: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000BC0: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000BC8: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000BD0: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000BD8: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000BE0: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000BE8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000BEC: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000BF0: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000BF8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000BFC: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000C00: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000C08: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000C0C: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000C10: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000C18: 340C1288
  s_movk_i32    s2, 0x00ff                              // 000000000C1C: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000C20: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000C28: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000C2C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000C30: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000C38: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000C3C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000C40: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000C48: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000C50: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000C58: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000C60: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000C68: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000C70: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000C78: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000C80: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000C88: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000C90: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000C98: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000CA0: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000CA8: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000CB0: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000CB8: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000CC0: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000CC8: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000CD0: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000CD8: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000CE0: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000CE8: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000CF0: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000CF8: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000000D00: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000000D08: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000000D10: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000000D18: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000000D20: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000000D28: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000000D30: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000000D38: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000D40: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000D48: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000D50: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000D58: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000D60: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000D68: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000D70: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000D78: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000D80: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000D88: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000D8C: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000D90: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000D98: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000D9C: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000DA0: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000DA8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000DAC: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000DB0: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000DB8: 340C1288
  s_movk_i32    s2, 0x00ff                              // 000000000DBC: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000DC0: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000DC8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000DCC: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000DD0: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000DD8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000DDC: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000DE0: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000DE8: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000DF0: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000DF8: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000E00: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000E08: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000E10: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000E18: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000E20: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000E28: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000E30: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000E38: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000E40: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000E48: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000E50: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000E58: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000000E60: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000000E68: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000000E70: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000000E78: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000000E80: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000000E88: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000000E90: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000000E98: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000000EA0: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000000EA8: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000000EB0: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000000EB8: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000000EC0: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000000EC8: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000000ED0: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000000ED8: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000000EE0: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000000EE8: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000000EF0: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000000EF8: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 000000000F00: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 000000000F08: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 000000000F10: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 000000000F18: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 000000000F20: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 000000000F28: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000F2C: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 000000000F30: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 000000000F38: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000F3C: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 000000000F40: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 000000000F48: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000F4C: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 000000000F50: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 000000000F58: 340C1288
  s_movk_i32    s2, 0x00ff                              // 000000000F5C: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000000F60: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000000F68: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000F6C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000000F70: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000000F78: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 000000000F7C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000000F80: D2940000 041A0002
  v_bfe_u32     v6, v1, 24, 8                           // 000000000F88: D2900006 02213101
  v_bfe_u32     v7, v1, 24, 8                           // 000000000F90: D2900007 02213101
  v_bfe_u32     v8, v1, 24, 8                           // 000000000F98: D2900008 02213101
  v_bfe_u32     v9, v1, 16, 8                           // 000000000FA0: D2900009 02212101
  v_bfe_u32     v10, v1, 16, 8                          // 000000000FA8: D290000A 02212101
  v_bfe_u32     v11, v1, 16, 8                          // 000000000FB0: D290000B 02212101
  v_bfe_u32     v12, v1, 8, 8                           // 000000000FB8: D290000C 02211101
  v_bfe_u32     v13, v1, 8, 8                           // 000000000FC0: D290000D 02211101
  v_bfe_u32     v14, v1, 8, 8                           // 000000000FC8: D290000E 02211101
  v_bfe_u32     v15, v1, 0, 8                           // 000000000FD0: D290000F 02210101
  v_bfe_u32     v16, v1, 0, 8                           // 000000000FD8: D2900010 02210101
  v_bfe_u32     v1, v1, 0, 8                            // 000000000FE0: D2900001 02210101
  v_bfe_u32     v17, v0, 24, 8                          // 000000000FE8: D2900011 02213100
  v_bfe_u32     v18, v0, 24, 8                          // 000000000FF0: D2900012 02213100
  v_bfe_u32     v19, v0, 24, 8                          // 000000000FF8: D2900013 02213100
  v_bfe_u32     v20, v0, 16, 8                          // 000000001000: D2900014 02212100
  v_bfe_u32     v21, v0, 16, 8                          // 000000001008: D2900015 02212100
  v_bfe_u32     v22, v0, 16, 8                          // 000000001010: D2900016 02212100
  v_bfe_u32     v23, v0, 8, 8                           // 000000001018: D2900017 02211100
  v_bfe_u32     v24, v0, 8, 8                           // 000000001020: D2900018 02211100
  v_bfe_u32     v25, v0, 8, 8                           // 000000001028: D2900019 02211100
  v_bfe_u32     v26, v0, 0, 8                           // 000000001030: D290001A 02210100
  v_bfe_u32     v27, v0, 0, 8                           // 000000001038: D290001B 02210100
  v_bfe_u32     v0, v0, 0, 8                            // 000000001040: D2900000 02210100
  v_cmp_eq_u32  s[2:3], v6, 0                           // 000000001048: D1840002 00010106
  v_cndmask_b32  v6, v7, v8, s[2:3]                     // 000000001050: D2000006 000A1107
  v_cmp_eq_u32  s[2:3], v9, 0                           // 000000001058: D1840002 00010109
  v_cndmask_b32  v7, v10, v11, s[2:3]                   // 000000001060: D2000007 000A170A
  v_cmp_eq_u32  s[2:3], v12, 0                          // 000000001068: D1840002 0001010C
  v_cndmask_b32  v8, v13, v14, s[2:3]                   // 000000001070: D2000008 000A1D0D
  v_cmp_eq_u32  s[2:3], v15, 0                          // 000000001078: D1840002 0001010F
  v_cndmask_b32  v1, v16, v1, s[2:3]                    // 000000001080: D2000001 000A0310
  v_cmp_eq_u32  s[2:3], v17, 0                          // 000000001088: D1840002 00010111
  v_cndmask_b32  v9, v18, v19, s[2:3]                   // 000000001090: D2000009 000A2712
  v_cmp_eq_u32  s[2:3], v20, 0                          // 000000001098: D1840002 00010114
  v_cndmask_b32  v10, v21, v22, s[2:3]                  // 0000000010A0: D200000A 000A2D15
  v_cmp_eq_u32  s[2:3], v23, 0                          // 0000000010A8: D1840002 00010117
  v_cndmask_b32  v11, v24, v25, s[2:3]                  // 0000000010B0: D200000B 000A3318
  v_cmp_eq_u32  s[2:3], v26, 0                          // 0000000010B8: D1840002 0001011A
  v_cndmask_b32  v0, v27, v0, s[2:3]                    // 0000000010C0: D2000000 000A011B
  v_lshlrev_b32  v6, 8, v6                              // 0000000010C8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000010CC: B00200FF
  v_bfi_b32     v6, s2, v7, v6                          // 0000000010D0: D2940006 041A0E02
  v_lshlrev_b32  v6, 8, v6                              // 0000000010D8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000010DC: B00200FF
  v_bfi_b32     v6, s2, v8, v6                          // 0000000010E0: D2940006 041A1002
  v_lshlrev_b32  v6, 8, v6                              // 0000000010E8: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 0000000010EC: B00200FF
  v_bfi_b32     v1, s2, v1, v6                          // 0000000010F0: D2940001 041A0202
  v_lshlrev_b32  v6, 8, v9                              // 0000000010F8: 340C1288
  s_movk_i32    s2, 0x00ff                              // 0000000010FC: B00200FF
  v_bfi_b32     v6, s2, v10, v6                         // 000000001100: D2940006 041A1402
  v_lshlrev_b32  v6, 8, v6                              // 000000001108: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000110C: B00200FF
  v_bfi_b32     v6, s2, v11, v6                         // 000000001110: D2940006 041A1602
  v_lshlrev_b32  v6, 8, v6                              // 000000001118: 340C0C88
  s_movk_i32    s2, 0x00ff                              // 00000000111C: B00200FF
  v_bfi_b32     v0, s2, v0, v6                          // 000000001120: D2940000 041A0002
  v_add_i32     v5, vcc, 1, v5                          // 000000001128: 4A0A0A81
  v_cmp_lt_i32  s[2:3], v5, v4                          // 00000000112C: D1020002 00020905
  s_and_b64     exec, exec, s[2:3]                      // 000000001134: 87FE027E
  s_cbranch_execz  label_0450                           // 000000001138: BF880001
  s_branch      label_003A                              // 00000000113C: BF82FBEA
label_0450:
  s_mov_b64     exec, s[0:1]                            // 000000001140: BEFE0400
  flat_load_dword  v0, v[0:1]                           // 000000001144: DC300000 00000000
  s_waitcnt     vmcnt(0) & lgkmcnt(0)                   // 00000000114C: BF8C0070
  flat_store_dword  v[2:3], v0                          // 000000001150: DC700000 00000002
  v_mov_b32     v0, 0                                   // 000000001158: 7E000280
  flat_store_dword  v[2:3], v0                          // 00000000115C: DC700000 00000002
  v_mov_b32     v0, 0                                   // 000000001164: 7E000280
  flat_store_dword  v[2:3], v0                          // 000000001168: DC700000 00000002
  v_mov_b32     v0, 0                                   // 000000001170: 7E000280
  flat_store_dword  v[2:3], v0                          // 000000001174: DC700000 00000002
label_045F:
  s_endpgm                                              // 00000000117C: BF810000
end

AMD HSA Code Object End
